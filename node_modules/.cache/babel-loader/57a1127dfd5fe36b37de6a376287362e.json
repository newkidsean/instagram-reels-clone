{"ast":null,"code":"var _jsxFileName = \"/Users/sean/Documents/cloneCoding/instaReels/instareels/src/VideoCard.js\";\nimport React, { useState, useRef } from 'react';\nimport VideoHeader from './VideoHeader';\nimport VideoFooter from './VideoFooter';\nimport './VideoCard.css';\n\nfunction VideoCard({\n  url,\n  likes,\n  shares,\n  channel,\n  avatarSrc,\n  song\n}) {\n  const [isVideoPlaying, setIsVideoPlaying] = useState(false);\n  const videoRef = useRef(null);\n\n  const onVideoPress = () => {\n    if (isVideoPlaying) {\n      // stop\n      videoRef.current.pause();\n      setIsVideoPlaying(false);\n    } else {\n      // play\n      videoRef.current.play();\n      setIsVideoPlaying(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"videoCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(VideoHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"video\", {\n    ref: videoRef,\n    onClick: onVideoPress,\n    className: \"videoCard__player\",\n    src: url,\n    alt: \"TG reel video\",\n    loop: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(VideoFooter, {\n    channel: channel,\n    likes: likes,\n    shares: shares,\n    avatarSrc: avatarSrc,\n    song: song,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default VideoCard;","map":{"version":3,"sources":["/Users/sean/Documents/cloneCoding/instaReels/instareels/src/VideoCard.js"],"names":["React","useState","useRef","VideoHeader","VideoFooter","VideoCard","url","likes","shares","channel","avatarSrc","song","isVideoPlaying","setIsVideoPlaying","videoRef","onVideoPress","current","pause","play"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,iBAAP;;AAGA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,KAAP;AAAcC,EAAAA,MAAd;AAAsBC,EAAAA,OAAtB;AAA+BC,EAAAA,SAA/B;AAA0CC,EAAAA;AAA1C,CAAnB,EAAqE;AACjE,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IACNZ,QAAQ,CAAC,KAAD,CADR;AAEA,QAAMa,QAAQ,GAAGZ,MAAM,CAAC,IAAD,CAAvB;;AAEA,QAAMa,YAAY,GAAG,MAAM;AACvB,QAAIH,cAAJ,EAAoB;AAChB;AACAE,MAAAA,QAAQ,CAACE,OAAT,CAAiBC,KAAjB;AACAJ,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,KAJD,MAIO;AACH;AACAC,MAAAA,QAAQ,CAACE,OAAT,CAAiBE,IAAjB;AACAL,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH;AACJ,GAVD;;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AACA,IAAA,GAAG,EAAEC,QADL;AAEA,IAAA,OAAO,EAAEC,YAFT;AAGA,IAAA,SAAS,EAAC,mBAHV;AAIA,IAAA,GAAG,EAAET,GAJL;AAKA,IAAA,GAAG,EAAC,eALJ;AAMA,IAAA,IAAI,EAAE,IANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAUI,oBAAC,WAAD;AACA,IAAA,OAAO,EAAEG,OADT;AAEA,IAAA,KAAK,EAAEF,KAFP;AAGA,IAAA,MAAM,EAAEC,MAHR;AAIA,IAAA,SAAS,EAAEE,SAJX;AAKA,IAAA,IAAI,EAAEC,IALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADJ;AAqBH;;AAED,eAAeN,SAAf","sourcesContent":["import React, { useState, useRef } from 'react';\nimport VideoHeader from './VideoHeader';\nimport VideoFooter from './VideoFooter';\nimport './VideoCard.css';\n\n\nfunction VideoCard({ url, likes, shares, channel, avatarSrc, song }) {\n    const [isVideoPlaying, setIsVideoPlaying] = \n    useState(false);\n    const videoRef = useRef(null);\n    \n    const onVideoPress = () => {\n        if (isVideoPlaying) {\n            // stop\n            videoRef.current.pause()\n            setIsVideoPlaying(false)\n        } else {\n            // play\n            videoRef.current.play()\n            setIsVideoPlaying(true)\n        }\n    };\n\n    return (\n        <div className=\"videoCard\">\n            <VideoHeader />\n            <video \n            ref={videoRef}\n            onClick={onVideoPress}\n            className=\"videoCard__player\"\n            src={url}\n            alt='TG reel video'\n            loop={true}\n            />\n            <VideoFooter \n            channel={channel}\n            likes={likes}\n            shares={shares}\n            avatarSrc={avatarSrc}\n            song={song}\n            />\n            \n        </div>\n    )\n}\n\nexport default VideoCard\n"]},"metadata":{},"sourceType":"module"}