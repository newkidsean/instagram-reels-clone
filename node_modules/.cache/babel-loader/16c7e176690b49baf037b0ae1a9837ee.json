{"ast":null,"code":"import _slicedToArray from\"/Users/sean/Documents/cloneCoding/instaReels/instareels/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef}from'react';import VideoHeader from'./VideoHeader';import VideoFooter from'./VideoFooter';import'./VideoCard.css';function VideoCard(_ref){var url=_ref.url,likes=_ref.likes,shares=_ref.shares,channel=_ref.channel,avatarSrc=_ref.avatarSrc,song=_ref.song;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isVideoPlaying=_useState2[0],setIsVideoPlaying=_useState2[1];var videoRef=useRef(null);var onVideoPress=function onVideoPress(){if(isVideoPlaying){// stop\nvideoRef.current.pause();setIsVideoPlaying(false);}else{// play\nvideoRef.current.play();setIsVideoPlaying(true);}};return/*#__PURE__*/React.createElement(\"div\",{className:\"videoCard\"},/*#__PURE__*/React.createElement(VideoHeader,null),/*#__PURE__*/React.createElement(\"video\",{ref:videoRef,onClick:onVideoPress,className:\"videoCard__player\",src:url,alt:\"TG reel video\",loop:true}),/*#__PURE__*/React.createElement(VideoFooter,{channel:channel,likes:likes,shares:shares,avatarSrc:avatarSrc,song:song}));}export default VideoCard;","map":{"version":3,"sources":["/Users/sean/Documents/cloneCoding/instaReels/instareels/src/VideoCard.js"],"names":["React","useState","useRef","VideoHeader","VideoFooter","VideoCard","url","likes","shares","channel","avatarSrc","song","isVideoPlaying","setIsVideoPlaying","videoRef","onVideoPress","current","pause","play"],"mappings":"8KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,MAA1B,KAAwC,OAAxC,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAO,iBAAP,CAGA,QAASC,CAAAA,SAAT,MAAqE,IAAhDC,CAAAA,GAAgD,MAAhDA,GAAgD,CAA3CC,KAA2C,MAA3CA,KAA2C,CAApCC,MAAoC,MAApCA,MAAoC,CAA5BC,OAA4B,MAA5BA,OAA4B,CAAnBC,SAAmB,MAAnBA,SAAmB,CAARC,IAAQ,MAARA,IAAQ,eAEjEV,QAAQ,CAAC,KAAD,CAFyD,wCAC1DW,cAD0D,eAC1CC,iBAD0C,eAGjE,GAAMC,CAAAA,QAAQ,CAAGZ,MAAM,CAAC,IAAD,CAAvB,CAEA,GAAMa,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACvB,GAAIH,cAAJ,CAAoB,CAChB;AACAE,QAAQ,CAACE,OAAT,CAAiBC,KAAjB,GACAJ,iBAAiB,CAAC,KAAD,CAAjB,CACH,CAJD,IAIO,CACH;AACAC,QAAQ,CAACE,OAAT,CAAiBE,IAAjB,GACAL,iBAAiB,CAAC,IAAD,CAAjB,CACH,CACJ,CAVD,CAYA,mBACI,2BAAK,SAAS,CAAC,WAAf,eACI,oBAAC,WAAD,MADJ,cAEI,6BACA,GAAG,CAAEC,QADL,CAEA,OAAO,CAAEC,YAFT,CAGA,SAAS,CAAC,mBAHV,CAIA,GAAG,CAAET,GAJL,CAKA,GAAG,CAAC,eALJ,CAMA,IAAI,CAAE,IANN,EAFJ,cAUI,oBAAC,WAAD,EACA,OAAO,CAAEG,OADT,CAEA,KAAK,CAAEF,KAFP,CAGA,MAAM,CAAEC,MAHR,CAIA,SAAS,CAAEE,SAJX,CAKA,IAAI,CAAEC,IALN,EAVJ,CADJ,CAqBH,CAED,cAAeN,CAAAA,SAAf","sourcesContent":["import React, { useState, useRef } from 'react';\nimport VideoHeader from './VideoHeader';\nimport VideoFooter from './VideoFooter';\nimport './VideoCard.css';\n\n\nfunction VideoCard({ url, likes, shares, channel, avatarSrc, song }) {\n    const [isVideoPlaying, setIsVideoPlaying] = \n    useState(false);\n    const videoRef = useRef(null);\n    \n    const onVideoPress = () => {\n        if (isVideoPlaying) {\n            // stop\n            videoRef.current.pause()\n            setIsVideoPlaying(false)\n        } else {\n            // play\n            videoRef.current.play()\n            setIsVideoPlaying(true)\n        }\n    };\n\n    return (\n        <div className=\"videoCard\">\n            <VideoHeader />\n            <video \n            ref={videoRef}\n            onClick={onVideoPress}\n            className=\"videoCard__player\"\n            src={url}\n            alt='TG reel video'\n            loop={true}\n            />\n            <VideoFooter \n            channel={channel}\n            likes={likes}\n            shares={shares}\n            avatarSrc={avatarSrc}\n            song={song}\n            />\n            \n        </div>\n    )\n}\n\nexport default VideoCard\n"]},"metadata":{},"sourceType":"module"}